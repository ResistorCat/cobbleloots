plugins {
    id 'com.github.johnrengelman.shadow'
    id 'org.jetbrains.kotlin.jvm'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation("com.cobblemon:neoforge:$rootProject.cobblemon_version")
    implementation("thedarkcolour:kotlinforforge-neoforge:$rootProject.neoforge_kotlin_version") {
        exclude group: "net.neoforged.fancymodloader", module: "loader"
    }

    ////////////////////////////
    // DEBUGGING DEPENDENCIES //
    ////////////////////////////
    // implementation "curse.maven:jade-324717:6011258"
    // implementation "curse.maven:xaeros-minimap-263420:6778051"
    ////////////////////////////

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.properties([
            'mod_id'          : project.mod_id,
            'mod_version'     : project.mod_version,
            'mod_version_type': project.mod_version_type,
            'mod_name'        : project.mod_name,
            'mod_description' : project.mod_description,
            'mod_authors'     : project.mod_authors,
            'mod_license'     : project.mod_license,
            'mod_logo'        : project.mod_logo,
            'mod_homepage'    : project.mod_homepage,
            'minecraft_version': project.minecraft_version,
    ])

    filesMatching('META-INF/neoforge.mods.toml') {
        expand([
                'mod_id'          : project.mod_id,
                'mod_version'     : project.mod_version,
                'mod_version_type': project.mod_version_type,
                'mod_name'        : project.mod_name,
                'mod_description' : project.mod_description,
                'mod_authors'     : project.mod_authors,
                'mod_license'     : project.mod_license,
                'mod_logo'        : project.mod_logo,
                'mod_homepage'    : project.mod_homepage,
                'minecraft_version': project.minecraft_version,
        ])
    }

}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
